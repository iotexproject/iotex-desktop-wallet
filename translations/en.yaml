abi.input: Input
abi.return: Return
account.actionHistory: 'Action History'
account.addCustomRPC: 'Add custom RPC'
account.address: 'Account Address'
account.availableForBid: 'Your balance available for bidding: '
account.bid: Bid
account.change: 'Change Wallet'
account.claim: Claim
account.claimAs.authMessage: 'Authenticate message'
account.claimAs.authorizedMessage: 'Authentication private message'
account.claimAs.authorizedTemplate: "{\n  \"address\": \"0x497...\",\n  \"msg\": \"1I authorize 0x0123...\",\n  \"sig\": \"0xfa076d068...\",\n  \"version\": \"2\"\n}"
account.claimAs.close: Close
account.claimAs.generate: Generate
account.claimAs.generateAuthMessage: 'Generate an authenticate message'
account.claimAs: 'Claim As'
account.empty.unlock: 'Unlock your wallet to see details!'
account.erc20.addCustom: 'Custom Tokens'
account.erc20.notfound: 'Token not found!'
account.error.invalidAuthorizedMessage: 'Invalid authentication private message!'
account.error.notEnoughBalance: 'You don''t have enough IoTx balance to perform the action!'
account.joinDiscord: 'Join Discord'
account.not-hold: 'IoTeX.io does not hold your keys for you. We cannot access accounts recover keys, nor reverse transactions'
account.pay-attention: 'Pay attention'
account.placeBid: 'Place bid for VITA'
account.protect: 'Protect your keys & always check that you are on correct URL.'
account.refresh: 'Refresh balances'
account.responsible: 'You are responsible for your security.'
account.rpc.nameHolder: 'My RPC'
account.save: 'Save your private key to access your wallet later'
account.switchAccount: 'Switch Account'
account.testnet.token: IOTX
account.token.addCustom: 'Custom Tokens'
account.token.notfound: 'Token not found!'
account.transaction-history: 'Go to transaction history'
account.wallet: Wallet
account.why: 'Why save your private key?'
account.rank: "Rank"
account.nameTag: "Name Tag"
account.percentage: "Percentage"
account.txnCount: "Txn Count"
action.action: Action
action.actions: Actions
action.amount: Amount
action.block_hash: Block
action.click_send_email: 'Click to send email'
action.copy_link: 'Copy Link'
action.data: Data
action.email: Email
action.from: From
action.hash: Hash
action.notFound: 'Sorry, we are unable to locate this transaction Hash'
action.pending: 'IoTeX Pending Action'
action.recipient: Recipient
action.sender: Sender
action.share_this_action: 'Share this Action'
action.type.claimFromRewardingFund: 'claim From RewardingFund'
action.type.createDeposit: 'create Deposit'
action.type.createPlumChain: 'create PlumChain'
action.type.depositToRewardingFund: 'deposit To Rewarding Fund'
action.type.execution: Execution
action.type.grant_reward: 'Grant Reward'
action.type.grantReward: 'Grant Reward'
action.type.plumChallengeExit: 'plum ChallengeExit'
action.type.plumCreateDeposit: 'plum CreateDeposit'
action.type.plumFinalizeExit: 'plum Finalize Exit'
action.type.plumPutBlock: 'plum PutBlock'
action.type.plumResponseChallengeExit: 'plum Response Challenge Exit'
action.type.plumSettleDeposit: 'plum Settle Deposit'
action.type.plumStartExit: 'plum StartExit'
action.type.plumTransfer: 'plum Transfer'
action.type.putBlock: 'put Block'
action.type.putPollResult: 'put Poll Result'
action.type.settleDeposit: 'settle Deposit'
action.type.startSubChain: 'start SubChain'
action.type.stopSubChain: 'stop SubChain'
action.type.terminatePlumChain: 'terminate PlumChain'
action.type.transfer: Transfer
action.type: Type
action.types.in: IN
action.types.out: OUT
action.types.self: SELF
action_details.hash: "Action Hash: ${actionHash}"
address.address: Address
address.balance: balance
address.name: "Name Tag"
address.nonce: nonce
address.pendingNonce: pendingNonce
address_details.address: "Address: ${address}"
address_details.share_address: Share this address
block.block: Block
block.blocks: Blocks
block.delta_state_digest: 'Digest of Delta State'
block.ErrCodeStoreOutOfGas: Failure [Deployment out of gas - not enough gas to store code]
block.ErrContractAddressCollision: Failure [Contract address collision]
block.ErrDepth: Failure [Max call depth exceeded]
block.ErrExecutionReverted: Failure [Execution reverted]
block.ErrMaxCodeSizeExceeded: Failure [Max code size exceeded]
block.ErrNoCompatibleInterpreter: Failure [No compatible interpreter]
block.ErrOutOfGas: Failure [Execution out of gas]
block.ErrUnknown: Failure [Unknown]
block.ErrWriteProtection: Failure [Write protection]
block.Failure: Failure
block.hash: Hash
block.height: Height
block.num_actions: Actions
block.producer_address: Producer
block.receipt_root: 'Receipt Root'
block.show_less: 'Show Less'
block.show_more: 'Show More'
block.Success: Success
block.timestamp: Age
block.transfer_amount: 'Transfer Amount'
block.tx_root: 'Tx Root'
block_details.hash: "Block Hash: ${hash}"
broadcast.button.check: 'Check TX Status'
broadcast.error.message: 'Error message:'
broadcast.fail.network: 'The transaction failed to be broadcast to the network'
broadcast.fail: 'Fail to broadcast transaction'
broadcast.success: 'Broadcast transaction successfully'
broadcast.suggested.action: 'Suggested actions:'
broadcast.warn.one: 'Your TX has been broadcast to the network. This does not mean it has been mined on the blockchain. It usually take a few seconds to confirm.'
broadcast.warn.three: 'Your TX hash:'
broadcast.warn.two: 'You can check the status right now by clicking the following button or save your TX hash and check the status later'
button.backHome: 'Back Home'
candidate.delegate_badges: 'Badges'
candidate.delegate_name: 'Delegate Name'
candidate.live_votes: LiveVotes
candidate.percent: Percent
candidate.productivity: Progress of Epoch
candidate.status: Status
candidates.delegate_list: 'Delegate List'
candidates.election.consensus_delegates: 'IoTeX Consensus Delegates'
candidates.election.delegates: 'IoTeX Delegates'
candidates.election.delegates_candidates: 'IoTeX Delegates Candidates'
candidates.election.ELECTED: Elected
candidates.election.explain: 'Delegates must self-stake at least <b>1,200,000 IOTX</b> and earn <b>2,000,000 IOTX</b> total votes to be elected.'
candidates.election.NOT_ELECTED: 'Not Elected'
candidates.election.NOT_EQUIPPED: 'Not Equipped'
candidates.election.OFFLINE: Offline
candidates.election.ONLINE: Online
candidates.election.UNQUALIFIED: 'Not Elected'
candidates.election.PROBATION: 'Probation'
candidates.rank: Rank
coming_soon.bar: 'coming soon'
coming_soon.title: 'Coming Soon...'
common.address: Address
common.contract_transactions: Contract Transactions
common.show_less: Show Less
common.show_more: Show More
common.transactions: Transactions
common.xrc20Transactions: XRC20 Transactions
common.xrc721Transactions: XRC20 Transactions
confirmation.amount: Amount
confirmation.data: Data
confirmation.fromAddress: 'From address'
confirmation.limit: 'Gas limit'
confirmation.method: Method
confirmation.owner: Owner
confirmation.price: 'Gas price'
confirmation.toAddress: 'To addresss'
confirmation.toContract: 'To contract'
copy.copied: Copied
copy.copyToClipboard: 'Copy ${field} to clipboard'
copy.scan: 'Scan the QR code'
copy.toClipboard: 'Copy address to clipboard'
erc20.execution.error.lowGasInput: 'Gas input too low!'
erc20.execution.error.notEnoughBalance: 'Your IoTx balance is not enough to execute the transaction!'
footer.about_us: 'About Us'
footer.announcemenets: Announcements
footer.charity_program: 'Charity Program'
footer.delegates_program: 'Delegates Program'
footer.develop: Develop
footer.documentations: Documentations
footer.enter_email: 'Enter email for Iotex updates!'
footer.explorer: Explorer
footer.forum: Forum
footer.github: Github
footer.lauch: Launch
footer.launch: Launch
footer.libraries_tools: 'Libraries and Tools'
footer.policy: 'Terms of Use & Privacy Policy.'
footer.research_paper: 'Research Papers'
footer.resource: Resources
footer.roadmap: Roadmap
footer.subscribe.failed: 'Subscribe fail, please try again later!'
footer.subscribe.success: 'Subscribe success!'
footer.subscribe: Subscribe
footer.subscribe_success: 'Success To Subscribe'
footer.support: Support
footer.team: Team
footer.wallet: Wallet
home.blockHeight: 'BLOCK HEIGHT'
home.blocklist.ofActions: 'of actions'
home.currentTPS: 'CURRENT TPS'
home.IOTXPrice: 'IOTX PRICE'
home.marketCap: MARKETCAP
home.producer: PRODUCER
home.stats.actions: Transactions
home.stats.candidates: 'Consensus Delegates / Candidates'
home.stats.currentEpoch: 'Current Epoch'
home.stats.day: Day
home.stats.energyConsumption: 'Daily Energy Consumption'
home.stats.map: Map
home.stats.numberOfAddresses: '# of Addresses'
home.stats.numberOfTransactions: '# of Transactions'
home.stats.productivity: 'Average Productivity'
home.stats.progressEpoch: 'Progress of Epoch'
home.stats.tps: 'Curent TPS / Peak'
home.stats.votes: Votes
home.stats.stakedVotes: Staked Votes
input.error.bytes.invalid: 'Invalid byte code'
input.error.erc20_address.length: 'ERC20 Token address has to be of length 41'
input.error.keystore.failed_to_derive: 'Key derivation failed. Possibly wrong password.'
input.error.keystore.invalid: 'Keystore file is invalid.'
input.error.keystore.required: 'Keystore file is required.'
input.error.mnemonic.invalid: 'Please input your mnemonic phrase'
input.error.mnemonic.label: Mnemonic Phrase
input.error.mnemonic.length: 'Mnemonic Phrase must have 12 words'
input.error.mnemonic.placeholder: Paste your mnemonic phrase here
input.error.password.too_weak: 'Password is too weak.'
input.error.private_key.invalid: 'Please input your private key'
input.error.private_key.length: 'Private key has to be of length 64'
input.error.raw_address.length: 'IOTX address has to be of length 41'
input.error.rpc.invalid: 'Can''t connect to Network Provider!'
input.error.url.invalid: 'Invalid URL'
input.error.xrc20_address.length: 'XRC20 Token address has to be of length 41'
input.error.xrc721_address.length: 'XRC721 Token address has to be of length 41'
meta.description: 'Exploring IoTeX blockchain Address, Actions, and Smart Contracts.'
meta.title: 'Blockchain Explorer - IoTeX'
multiChain.chains.custom: 'Custom RPC'
multiChain.chains.mainnet: 'Main IoTeX Network'
multiChain.chains.testnet: 'IoTeX Test Network'
navigation.action: Action List
navigation.action_detail: Action Detail
navigation.address: Address List
navigation.block: Block List
new-wallet.button.unlock: 'I understand, Unlock Wallet'
new-wallet.copy: Copy
new-wallet.created: 'Wallet is created!'
new-wallet.export_keystore: 'Export Keystore File (UTC / JSON)'
new-wallet.mnemonic: 'Mnemonic Phrase'
new-wallet.privateKey: 'Private Key'
new-wallet.save_keystore: '<div><p class="wallet-title" style="display: inline-block;">Save your</p><p class="private-key">keystore file</p></div>'
new-wallet.save_mnemonic: '<div><p class="wallet-title" style="display: inline-block;">Save your</p><p class="private-key">mnemonic phrase</p></div>'
new-wallet.showPrivateKey: 'Show Private Key'
new-wallet.warn.backup: 'Make a backup!'
new-wallet.warn.cant-recover: 'It cannot be recovered if you lose it.'
new-wallet.warn.do-not-lose: 'Do not lose private key!'
new-wallet.warn.do-not-share: 'Do not share private key!'
new-wallet.warn.secure: 'Secure it like the millions of dollars it may one day be worth.'
new-wallet.warn.stolen: 'Your funds will be stolen if you use this file on a malicious/phishing site.'
not_found.bar: 'Not Found'
not_found.info: 'We cannot find the page for you...'
not_found.title: Oops!
page_navs.block: "Block #${height}"
pages.token: Token Transfers
pages.tokenHolders: Token Holders
pages.tokenTracker: Token Tracker
render.key.actHash: Hash
render.key.actionData: Data
render.key.actionFee: 'Action Fee'
render.key.actionType: Type
render.key.amount: Amount
render.key.balance: Balance
render.key.blkHash: Block
render.key.blkHeight: 'Block Height'
render.key.candidates: candidates
render.key.chainID: 'chain ID'
render.key.challengeTransfer: challengeTransfer
render.key.challengeTransferBlockHeight: challengeTransferBlockHeight
render.key.challengeTransferBlockProof: challengeTransferBlockProof
render.key.coinID: 'coin ID'
render.key.contract: Contract
render.key.contractAddress: 'Contract Address'
render.key.data: Data
render.key.deltaStateDigest: 'Digest of Delta State'
render.key.denomination: denomination
render.key.evmTransfer: Tokens Transferred
render.key.exitTransfer: 'exit Transfer'
render.key.exitTransferBlockHeight: exitTransferBlockHeight
render.key.exitTransferBlockProof: exitTransferBlockProof
render.key.fee: 'Gas Fee'
render.key.from: From
render.key.gasConsumed: 'Gas Consumed'
render.key.gasLimit: 'Gas Limit'
render.key.gasPrice: 'Gas Price'
render.key.hash: Hash
render.key.height: Height
render.key.index: Index
render.key.inputData: Input Data
render.key.logs: Logs
render.key.method: Method
render.key.nametag: "Name Tag"
render.key.nonce: Nonce
render.key.numActions: Actions
render.key.operationDeposit: 'Operation Deposit'
render.key.overview: Overview
render.key.owner: owner
render.key.ownerETH: 'Owner (Eth)'
render.key.parentHeightOffset: parentHeightOffset
render.key.payload: Payload
render.key.pendingNonce: Pending Nonce
render.key.previousTransfer: 'previous Transfer'
render.key.previousTransferBlockHeight: 'previous Transfer Block Height'
render.key.previousTransferBlockProof: 'previous Transfer Block Proof'
render.key.producerAddress: Producer
render.key.receiptRoot: 'Receipt Root'
render.key.recipient: Recipient
render.key.responseTransfer: responseTransfer
render.key.responseTransferBlockProof: responseTransferBlockProof
render.key.returnValue: 'Return Value'
render.key.roots: roots
render.key.securityDeposit: 'Security Deposit'
render.key.sender: Sender
render.key.startHeight: 'Start Height'
render.key.status: Status
render.key.stopHeight: 'Stop Height'
render.key.subChainAddress: 'subChain Address'
render.key.address: 'Address'
render.key.timestamp: Age
render.key.to: To
render.key.tokens: 'Tokens Transferred'
render.key.transferAmount: 'Transfer Amount'
render.key.txRoot: 'Tx Root'
render.key.type: 'Reward Type'
render.key.value: Value
render.key.depositToRewardingFund: depositToRewardingFund
render.value.execution: Execution
render.value.grantReward: 'Grant Reward'
render.value.deposit: 'Deposit'
render.value.rewardType.BlockReward: 'Block Reward'
render.value.rewardType.EpochReward: 'Epoch Reward'
render.value.transfer: Transfer
share_link.email_body: Check out this site ${href}
share_link.email_subject: Checkout this block hash on IoTeX blockchain
signin_modal.download: 'Haven''t installed yet? Download'
signin_modal.sign_in: 'Sign In with IoTeX Wallet'
signin_modal.wallet: 'IoTeX Wallet'
time.fn.ago: ago
time.fn.day: day
time.fn.days: days
time.fn.hour: hour
time.fn.hours: hours
time.fn.justnow: 'just now'
time.fn.minute: minute
time.fn.minutes: minutes
time.fn.month: month
time.fn.months: months
time.fn.year: year
time.fn.years: years
title.action: Action
title.actionList: 'List of Actions'
title.overview: Overview
title.receipt: Receipt
token.xrc20: XRC-20
token.xrc721: XRC-721
token.name: Name
token.address: Address
topbar.actions: ACTIONS
topbar.analytics_playground: 'ANALYTICS PLAYGROUND'
topbar.blockchain: BLOCKCHAIN
topbar.blocks: BLOCKS
topbar.brand: BRAND
topbar.dashboard: DASHBOARD
topbar.explorer_playground: 'EXPLORER PLAYGROUND'
topbar.goback_home: 'GO BACK HOME'
topbar.graphql_doc: 'GraphQL DOC'
topbar.graphql_playground: 'GraphQL PLAYGROUND'
topbar.home: HOME
topbar.search: 'Search by Address / Public Key / Hash / Height'
topbar.searchAddress: 'Search an address, block, hash...'
topbar.sign_in: 'SIGN IN'
topbar.tools: TOOLS
topbar.voting: VOTING
topbar.wallet: WALLET
topbar.xrc20Transfer: XRC20 TOKEN TRANSFERS
topbar.xrc721Transfer: XRC721 TOKEN TRANSFERS
topbar.tokens: XRC20 TOKENS
topbar.xrc721Tokens: XRC721 TOKENS
topbar.tokensMenu: TOKENS
topbar.accounts: ACCOUNTS
topbar.top_accounts: Top Accounts by IOTX Balance
transfer.for: For ${value}
unlock-by-ledger.pluginDevice: 'Please plugin ledger device and try again!'
unlock-by-ledger.warnTitle: 'Oops, couldn’t connect to device'
unlock-wallet.by_keystore: 'By Keystore'
unlock-wallet.by_ledger: 'Connect Ledger'
unlock-wallet.by_mnemonic: "By Mnemonic Phrase"
unlock-wallet.by_private_key: 'By Private Key'
unlock-wallet.create: 'Create a new wallet'
unlock-wallet.main-chain: 'Please go to mainchain to create a wallet.'
unlock-wallet.no-wallet: 'Don''t have a IoTeX wallet yet?'
unlock-wallet.title: 'Unlock your wallet'
unlock-wallet.warn.message: 'Please double-check the URL & SSL cert. It should say https://www.iotexscan.io in your URL bar.'
unlock_by_keystore_file.browse_file: 'Browse file...'
unlock_by_keystore_file.never_upload: 'We never upload or store your private key on the server. The keystore file here is handled locally.'
unlock_by_keystore_file.select_file: 'Select File'
unlock_by_ledger.message: 'Click the following button to proceed with Ledger.'
wall.input.gasLimit-help: 'The gas limit in the demo wallet is always 0.'
wallet.abi.read: 'Read contract'
wallet.abi.write: 'Write contract'
wallet.account.addressPlaceHolder: 'IoTeX Address...'
wallet.account.enterPrivateKey: 'Private Key'
wallet.account.placehold.privateKey: 'Paste your private key here'
wallet.account.private: 'Private Key'
wallet.account.raw: 'Account Address'
wallet.account.unlock: Unlock
wallet.bytecode.copy: 'Copy ByteCode'
wallet.cannot_find_solidity_version: 'Cannot find solidity version'
wallet.cannot_load_solidity_version: 'Cannot load solidity version'
wallet.choice.input.data: 'Data (optional)'
wallet.confirm.contract.cancel: 'No, cancel'
wallet.confirm.contract.p1: 'After sending this, your account balance will be'
wallet.confirm.contract.p2: 'Are you sure you want to do this?'
wallet.confirm.contract.title: 'You are about to send ...'
wallet.confirm.contract.yes: 'Yes, make transaction'
wallet.contract.back: 'Back to actions'
wallet.contract.button.check: 'Check action status'
wallet.contract.button.new: 'Send new IOTX & token'
wallet.contract.chooseFunction: 'Please choose an action.'
wallet.contract.deployContract.desc: 'This is a sentence of description. This is a sentence of description.'
wallet.contract.deployContract: 'Deploy contract'
wallet.contract.executeParameter: 'Contract execute parameters'
wallet.contract.interaction.success.p1: 'Your request has been broadcast to the network. This does not mean it has been mined on the blockchain. It usually takes a few seconds to confirm.'
wallet.contract.interaction.success.p2: 'You can check the status right now by click following button or save your TX hash and check the status later.'
wallet.contract.interaction.success.p3: 'Your action hash'
wallet.contract.interaction.success: 'Broadcast transaction successfully.'
wallet.contract.interactWith.desc: 'This is a sentence of description. This is a sentence of description.'
wallet.contract.interactWith: 'Interact with contract'
wallet.contract.learn: 'Learn more'
wallet.contract.loadindSolc: 'Loading solidity compiler...'
wallet.contract.title: Contract
wallet.deploy.broadcast.fail: "Please try to send Smart Contract later"
wallet.deploy.deploy: "Deploy Contract"
wallet.deploy.detail-title: "You are about to deploy ..."
wallet.deploy.generateAbiAndByteCode: "Generate ABI and Byte Code"
wallet.deploy.send-new: "Send new contract"
wallet.deploy.signTransaction: "Sign Transaction"
wallet.deploy.title: "Deploy contract"
wallet.erc20.title: 'Send VITA'
wallet.error.number-ge1: 'This field should be greater than or equal to 1.'
wallet.error.number: 'This field should be number.'
wallet.error.required: 'This field is required.'
wallet.input.abi: "ABI / JSON Interface"
wallet.input.amount: Amount
wallet.input.balance: 'Balance:'
wallet.input.byteCode: "Byte Code"
wallet.input.contractAddress: "Contract address"
wallet.input.dib: 'Data Hex'
wallet.input.fromErc20: 'ERC20 Token address'
wallet.input.fromXrc20: 'XRC20 Token address'
wallet.input.fromXrc721: 'XRC721 Token address'
wallet.input.gasCostLimit: "Gas Cost Limit"
wallet.input.gasLimit: "Gas Limit"
wallet.input.gasPrice: "Gas Price"
wallet.input.generate: 'Generate Transaction'
wallet.input.getInfo: 'Get info'
wallet.input.keystore: 'Keystore File'
wallet.input.name: Name
wallet.input.nonce: Nonce
wallet.input.password: Password
wallet.input.solidity: "Solidity (optional)"
wallet.input.to: 'Recipient address'
wallet.input.type: Type
wallet.input.url: Url
wallet.input.solVersion: Version
wallet.interact.abiTemplate: '[{ "type":"contructor", "inputs": [{ "name":"param1", "type":"uint256", "indexed":true }], "name":"Event" }, { "type":"function", "inputs": [{"name":"a", "type":"uint256"}], "name":"foo", "outputs": [{"name":"a", "type":"uint256"}] }]'
wallet.interact.access: Access
wallet.interact.contract: 'Interact with smart contract'
wallet.interact.invalidABI: 'Invalid JSON ABI'
wallet.interact.title: 'Interact with contract'
wallet.lock.btn.know: 'I know'
wallet.lock.btn.no: 'Lock it'
wallet.lock.btn.yes: 'Yes, dismiss the lock'
wallet.lock.cutdown: 'Your wallet will be locked in 10 minutes. Do you want to continue using it?'
wallet.lock.title: 'Locking Wallet'
wallet.missing_solidity_pragma: 'Incorrect Solidity'
wallet.placeholder.abi: ...
wallet.placeholder.byteCode: '0x1234 ...'
wallet.placeholder.contractAddress: io...
wallet.placeholder.solidity: "pragma solidity ^0.5.12; ..."
wallet.placeholder.compile: 'Select compiler version'
wallet.sign.confirm: 'Yes, sign transaction'
wallet.sign.envelop_msg: 'Are you sure you want to sign this transaction?'
wallet.sign.envelop_title: 'Transaction signing'
wallet.sign_and_send.success: 'Request sent successfully, action code is ${actionHash}'
wallet.tab.contract: 'Smart Contracts'
wallet.tab.erc20: ERC20
wallet.tab.keystore.title: 'Save your keystore file'
wallet.tab.keystore: 'Export Keystore'
wallet.tab.transfer: 'Send ${token}'
wallet.tab.vote: 'Vote for delegate'
wallet.tab.xrc20: XRC20
wallet.tab.xrc721: XRC721
wallet.title.wallet: Wallet
wallet.transactions.send: 'Send Transaction'
wallet.transfer.broadcast.fail: 'Increase gasLimit and try again!'
wallet.transfer.send-erc20: 'Send ERC20 tokens'
wallet.transfer.send-xrc20: 'Send XRC20 tokens'
wallet.transfer.send-xrc721: 'Send XRC721 tokens'
wallet.transfer.sendNew: 'Send new'
wallet.transfer.title: 'Send IOTX'
wallet.unlock.new.p1: 'We do not store your private key on the server. The private key generation is handled on your browser only.'
wallet.unlock.new.p2: 'Back up your private key because you will use it to access your wallet. If you lose your private key, it cannot be recovered.'
wallet.unlock.new.title: 'Please pay attention'
wallet.unlock.new.yes: 'I understand, continue'
wallet.unlock_alert.confirm: I know
wallet.unlock_alert.tip: Please unlock your wallet before perform other operations.
wallet.unlock_alert.title: Unlock Wallet First
wallet.vote.button: 'Vote on member.iotex.io'
wallet.vote.content: 'Help IoTeX Build A Stronger Network'
wallet.vote.title: 'Vote for delegate'
wallet.whitelist.action: 'This ${action} action from ${origin} will be whitelisted'
wallet.whitelist.add: Add To Whitelist
wallet.whitelist.amount: This value will be able to change without a popup
wallet.whitelist.cancel: Cancel
wallet.whitelist.cancel_addition: 'Cancel Add To Whitelist'
wallet.whitelist.disabled: disabled
wallet.whitelist.duration: This setting will expire after the specified time
wallet.whitelist.enabled: enabled
wallet.whitelist.forbidden: 'Do not show this modal again'
wallet.whitelist.intro: 'Whitelisting actions makes it so you don''t have to keep approving actions for application you trust. When whitelisting actions you will see checkboxes appear next to each action and value.'
wallet.whitelist.operation.alert: Sure to cancel?
wallet.whitelist.operation.cancel: Cancel
wallet.whitelist.operation.delete: Delete
wallet.whitelist.operation.edit: Edit
wallet.whitelist.operation.save: Save
wallet.whitelist.recipient: If the receipt change, you will have to approve the action again
wallet.whitelist.state: Whitelist state
wallet.whitelist.title: Whitelist Configuration
wallet.whitelist.title_amount: Amount(IOTX)
wallet.whitelist.title_operation: Operation
wallet.whitelist.title_origin: Origin/Method
wallet.whitelist.title_recipient: Recipient
wallet.whitelist.title_remain: Remain
wallet.whitelist: Whitelist
wallet.write.contract.ok: 'Generate transaction'
wallet.write.contract.p1.b: 'execute a function on contract.'
wallet.write.contract.p1: 'You are about to'
wallet.write.contract.p2: 'It will be deployed on the following network'
wallet.write.contract.p3: 'Amount to send. In most cases you should leave it as 0.'
wallet.write.contract.title: Warining
