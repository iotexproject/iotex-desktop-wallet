# This is a basic workflow to help you get started with Actions

name: Release ioPay Desktop

# Controls when the action will run. Triggers the workflow on push
# events but only for the tags
on:
  release:
    types: [published]

  # for testing. will delete when check in
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Create Release
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "10"

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Install depenedencies in electron
      run: |
        cd src/electron/
        npm install

    - name: Build
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        pwd
        npm run build
        cd src/electron/
        ls ../../dist/
        CSC_LINK=${{secrets.CERT_FILE}} CSC_KEY_PASSWORD=${{secrets.CERT_PASS}} APPLEID=${{secrets.APPLE_ID}} APPLEIDPASS=${{secrets.APPLE_PASS}} npm run build
        ls dist/*

    - name: upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: iopay-desktop-release
        path: src/electron/dist/ioPay*
    - name: upload to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: src/electron/dist/ioPay*
        tags: true
        draft: true
        prerelease: true
